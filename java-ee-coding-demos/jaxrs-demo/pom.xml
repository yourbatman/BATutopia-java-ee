<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>java-ee-coding-demos</artifactId>
        <groupId>cn.yourbatman</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>war</packaging>
    <artifactId>jaxrs-demo</artifactId>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
    </properties>

    <dependencies>
        <!-- API规范 -->
        <!--<dependency>-->
        <!--    <groupId>jakarta.ws.rs</groupId>-->
        <!--    <artifactId>jakarta.ws.rs-api</artifactId>-->
        <!--    <version>2.1.6</version>-->
        <!--</dependency>-->

        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-server</artifactId>
        </dependency>
        <!-- 使用Servelt容器启动，就得导入它 -->
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
        </dependency>
        <!-- 若遇上java.lang.IllegalStateException: InjectionManagerFactory not found.异常，导入此包 -->
        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>


        <!-- Client无需单独打包，因为jersey-server里已有。只有单独使用Jersey Client时才需导入 -->
        <!--<dependency>-->
        <!--    <groupId>org.glassfish.jersey.core</groupId>-->
        <!--    <artifactId>jersey-client</artifactId>-->
        <!--</dependency>-->
    </dependencies>
</project>